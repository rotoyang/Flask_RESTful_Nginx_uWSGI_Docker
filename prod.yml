version: '3'

volumes:
  dev_mysql_data: {}
  dev_mysql_data_backups: {}

services:
  flask: &flask
    build:
      context: .
      dockerfile: ./compose/dev/flask/Dockerfile
    image: gogotask_dev_flask
    expose:
      - 5000
    depends_on:
      - mysql
    env_file:
      - ./.mysql
    command: /start

  mysql:
    build:
      context: .
      dockerfile: ./compose/dev/mysql/Dockerfile
    image: gogotask_dev_mysql
    volumes:
      - dev_mysql_data:/var/lib/mysql:Z
      - dev_mysql_data_backups:/backups:z
      - ./compose/dev/mysql/mysql-init-files:/docker-entrypoint-initdb.d
    env_file:
      - ./.mysql
    restart: always
    ports:
      - "3306:3306"

  nginx:
    build:
      context: .
      dockerfile: ./compose/prod/nginx/Dockerfile
    image: gogotask_dev_nginx
    depends_on:
      - flask
    volumes:
      - ./compose/prod/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
